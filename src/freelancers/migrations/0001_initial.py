# Generated by Django 4.2.11 on 2024-05-16 01:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import freelancers.utils.utils
import freelancers.utils.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("clients", "0001_initial"),
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="FreelancerProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position", models.CharField(max_length=255, verbose_name="position")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True,
                        null=True,
                        validators=[freelancers.utils.validators.birth_date_validator],
                        verbose_name="date of birth",
                    ),
                ),
                (
                    "hourly_rate",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="hourly rate"
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="images/freelancer_profile_photo/",
                        validators=[freelancers.utils.validators.validate_file_size],
                        verbose_name="photo",
                    ),
                ),
                (
                    "sex",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (0, "Male"),
                            (1, "Female"),
                            (2, "I don't want to answer "),
                        ],
                        default=2,
                        verbose_name="gender",
                    ),
                ),
                (
                    "resume",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="freelancers_resume/",
                        validators=[
                            freelancers.utils.validators.extension_validator,
                            freelancers.utils.validators.validate_file_size,
                        ],
                        verbose_name="resume",
                    ),
                ),
                (
                    "city",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.city",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.country",
                    ),
                ),
                (
                    "skill",
                    models.ManyToManyField(
                        related_name="freelancer_profiles", to="core.skill"
                    ),
                ),
                (
                    "state",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.state",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="freelancer_profiles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Freelancer Profile",
                "verbose_name_plural": "Freelancer Profiles",
            },
        ),
        migrations.CreateModel(
            name="ReviewAboutFreelancer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "review",
                    models.TextField(
                        blank=True, max_length=1000, null=True, verbose_name="review"
                    ),
                ),
                (
                    "rating",
                    models.DecimalField(
                        decimal_places=1,
                        default=0.0,
                        max_digits=3,
                        validators=[freelancers.utils.validators.rating_validator],
                    ),
                ),
                (
                    "from_client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sent_reviews",
                        to="clients.clientprofile",
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="freelancer_reviews",
                        to="clients.job",
                    ),
                ),
                (
                    "to_freelancer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_reviews",
                        to="freelancers.freelancerprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Review About Freelancer",
                "verbose_name_plural": "Reviews About Freelancers",
            },
        ),
        migrations.CreateModel(
            name="Proposal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now=True, null=True)),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="title"
                    ),
                ),
                (
                    "hourly_rate",
                    models.DecimalField(
                        decimal_places=2, max_digits=5, verbose_name="hourly rate"
                    ),
                ),
                (
                    "estimated_end_date",
                    models.DateField(verbose_name="estimated end date"),
                ),
                (
                    "documentation",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=freelancers.utils.utils.documentation_upload,
                        verbose_name="documentation",
                    ),
                ),
                (
                    "selected",
                    models.BooleanField(default=False, verbose_name="selected"),
                ),
                (
                    "freelancer_profile_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposals",
                        to="freelancers.freelancerprofile",
                    ),
                ),
                (
                    "job_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="proposals",
                        to="clients.job",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
